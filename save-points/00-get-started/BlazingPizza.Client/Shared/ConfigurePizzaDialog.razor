@inject HttpClient Http

<div class="dialog-container" hidden="@(!Show)">
    @if (Pizza is not null)
    {
        <div class="dialog">
            <div class="dialog-title">
                <h2>@Pizza.Special.Name</h2>
                @Pizza.Special.Description
            </div>
            <form class="dialog-body">
                <div>
                    <label>Size:</label>
                    <input type="range" min="@Pizza.MinimumSize" max="@Pizza.MaximumSize" step="1" @bind="Pizza.Size" @bind:event="oninput" />
                    <span class="size-label">
                        @(Pizza.Size)" (£@(Pizza.GetFormattedTotalPrice()))
                    </span>
                </div>
                <div>
                    <label>Extra toppings:</label>
                    @if (_toppings is null)
                    {
                        <select class="custom-select" disabled>
                            <option>Loading...</option>
                        </select>
                    }
                    else if (Pizza.Toppings.Count >= 6)
                    {
                        <div>Maximum reached</div>
                    }
                    else
                    {
                        <select class="custom-select" @onchange="ToppingSelected">
                            <option value="1" disabled selected>(select)</option>
                            @foreach (var topping in _toppings)
                            {
                                <option value="@topping.Id">@topping.Name - (£@(topping.GetFormattedPrice()))</option>
                            }
                        </select>
                    }
                </div>

                <div class="toppings">
                    @foreach (var topping in Pizza.Toppings)
                    {
                        <div class="topping">
                            @topping.Topping.Name
                            <span class="topping-price">@topping.Topping.GetFormattedPrice()</span>
                            <button type="button" class="delete-topping" @onclick="@(() => RemoveTopping(topping.Topping))">
                                X
                            </button>
                        </div>
                    }
                </div>
            </form>
            <div class="dialog-buttons">
                <button class="btn btn-secondary mr-auto">Cancel</button>
                <span class="mr-center">
                    Price: <span class="price">@Pizza.GetFormattedTotalPrice()</span>
                </span>
                <button class="btn btn-success ml-auto">Order</button>
            </div>
        </div>
    }
</div>
